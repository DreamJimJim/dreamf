TCP協議
CP/IP
什麼是協定(protocol)

　　人和人講話的時後，為了解對方究竟在講什麼，我們是不是有一些約定成俗的習慣呢？若我們沒有定義這些話代表什麼意思，那豈不就是等於「雞同鴨講」一樣嗎？是的，網路上的電腦要彼此溝通對話，也是要透過一些定義、規範，這些東西，就稱為協定(protocol)。而今天在Internet上應用的最為廣泛的，正是今天要講的TCP/IP。

　　較詳細的講，TCP/IP架構中，本身就分為好幾個協定，如IP、UDP、ICMP等等。有些協定，用於溝通網路底層的硬體與硬體，有些溝通網路卡與應用軟體等……，我們甚至可以說，整個網路，就是靠協定架構起來的，這也正是一個最為重要的基本的規範，若不遵守這個規範，那就無法參與現今的網路世界了。

　　至於今日TCP/IP的起源，和許多電腦科技的起源一樣，皆是由美國國防部發展而來的。當初他們為了要能夠建立一個能讓軍方的電腦都能共同分享源，而又保有分散性的安全考量下，建立了一個稱為ARPAnet的網路，這個網路的架構，就是TCP/IP的前身。後來，美國國家科學基金會，用了此架構在學術研究的網路上，也造究了Internet的發展。這正是TCP/IP的起源。

3.TCP/IP分層

　　在了解TCP/IP之前，我們必需先講講有關「網路分層」這項概念。首先，你已經知道，網路是經由協定所架構出來的，而這些協定如何的運作呢？可以說，他們是用一種分工的方式，一個協定負責一項工作，統合起來，就是一個複雜的網路。也因此，我們將工作類型比較相近的歸類於一群，也就是一層。

　　TCP/IP架構中，共將網路分為四層：
 網路存取層(Network Access Layer)，負責處理實體網路的一個介面，如：
   資料格式化、實體層的資料定址等。
 網際網路層(Internet Layer)，負責邏輯位址(即一般所用的IP位址)的資料傳輸。
 傳輸層(Transport Layer)，負責流程控制、錯誤檢查等。
 應用層(Application Layer)，負責一些應用的介面，如檔案傳輸、遠端控制等。

　　網路分層還有很多種類別，或許你有聽過OSI的7層分法，但其中，的實體層(Physics Layer)和資料連結層(Data Link Layer)就相當於網路存取層；網路層(Network Layer)就相當於網際網路層；傳輸層當然一樣；而TCP/IP中的應用層在ISO分層中則分為會談層(Session Layer)、展現層(Presentation Layer)和應用層。事實上，沒有一個真正的網路是完完全全幅合這些標準理論的。網路實作中多半會混用，這又是令一個課題。

　　接下來先講個在這分層中傳輸的大要情形及主要的協定，以便對後面的課題有一個概念。

　　當我們要傳輸一個資料從一端到另一端時，必須先從最上層一直往下傳，再經過實體運送後，反過來從下層往上傳。以下便是這傳輸情形的大要：(詳細稍後在說)

 資料從應用層透過TCP或UDP埠(Port)到達傳輸層。
 在傳輸層會決定使用TCP或UDP協定來存取網路。
 到網際網路層後，IP協定會提供如何將資料導引到正確的邏輯IP位址的資訊。
 進入網路存取層後，會透過上層的ARP及RARP協定來轉換IP位址和實際位址，並將資料格式化成能在傳輸線上傳輸的格式而送出。

　　這樣子，資料就離開了原始端電腦傳向目的端，而該電腦收到後，則進行相反之步驟即可。必需知道的是，在經過每一層傳輸時，都會在資料上加上一些資訊，以能讓對方電腦能夠解讀。就稱為表頭(Header)，就有點像是有一個好幾層包起來的禮物要給人時，但怕對方不會拆，所以就在每層外面附上一張紙條說明如何拆。有點類似這個情形。
      以上就是大概的TCP/IP分層及傳輸，下面，我們則要詳細的介紹每層的內部協定。

4.網路存取層

　　這一層呢？可以說是最不統一的一層了，要講起來也很不好講。因為像種種的實體網路架構，如乙太，FDDI，Apple Talk，IBM的Token Ring等等…，都有著各自不同的規定，若要每一樣都講，也是講不完。所以筆者就不說明各別的內容，僅就相通處作一闡述。

　　此一層中，主要要做的工作有：規定資料傳輸的方式，就是建立一有如交通規則，紅燈停、綠燈行的這種規範，以能讓網路傳輸有規定及效率。如以太的CSMA/CD就是一例。再者還有將資料轉換成一稱為訊框(Frame)的格式，並將其轉為可用電子流或類比脈衝表現的樣式。

　　另外還得附帶一提蠻重要的一項，就是所謂的「實體位址」。實體位址是一個在一出廠時就燒在網路卡上的數字，當我們在區域網路傳輸資料時，就是透過實體位址來辨認電腦，並非邏輯位址。而在廣域網路上的情形，下一節中會提到。

5.網際網路層

　　我們之前提到網路卡在出廠時就會燒上實體位址，但是，實體位址的位元太多了，且沒有一定的規律性(稍後會提)，因此創出了IP位址。IP位址是由32個位元所構成的一組數字，我們將每八位元為一組，轉換為十進位的四組數字，中間用「.」加以區隔，就成了常見的IP位址。

　　在IP位址中，可分為表示網路編號和主機編號的數字，若網路編號像街道名，而主機編號則就像是門牌號碼一樣。又依此，我們將全球的網域分為Class A、Class B、Class C、Class D、Class E五個層級。在Class A的網域中，如一個86.1.1.1的IP中，「86」代表的是其網路編號，其餘的則是主機編號。而Class A的網路編號範圍是0~127(最左邊的位元為0所得的結果)，所以，一個Class A的網路可支援約16.7百萬個主機，通常配發給洲或須要極大主機數目的單位使用。而Class B則是前兩個xxx.xxx代表網路編號，後面的是主機編號，所以每一個lass B的網域可支援6萬多台電腦，而其網路編號範圍是128.0~191.255(最左邊兩位元為1 0)。Class C則是再下一層，有24個網路編號位元，8個主機編號位元，所以一個網域可支援256台電腦(但實際上一個網域最前面和最後面的IP不得做主機用，故每個網域會少兩個IP)。其網路編號範圍在192.0.0 ~223.255.255之間(最左三位元為1 1 0)，至於Class D 和Class E 則令有用途，就不在此論述了。

　　對IP位址有一個大概的了解後，介紹一下此層中重要的協定。首先就是IP協定，IP協定是個進行很多功能的軟件，它紀錄著三個IP的位址，分別為目的IP位址，子網路遮罩位址及閘接器(路由器)位址。子網路遮罩就是用來判定來源IP和目的IP是否在同一網域的一個判斷位址；而閘接器位址則是在若要送到不同網域時，用以決定封包的傳輸途徑。IP協定的運作，大概就是先用子網路遮罩計算兩位址是否在同一網域，再決定其傳送途徑。

　　此層中還有一個很重要的協定，就是ARP協定，此協定的功用是轉換實體位址和IP位址，而RARP則是其反協定。

　　此外，此層中的ICMP協定則是控制一些網路傳輸上的狀況的協定。如遇到狀況時的回傳訊息，就是透過ICMP協定的運作。

6.傳輸層

　　傳輸層是一個提供應用程式和網路之間的介面。首先我們要講的是埠(port)的觀念。如果說，我們只有IP位址的話，那一台電腦若有不同的應用軟體要同時進形網路傳輸的話，所有資料就會從同一個出口一起出去而產生混亂的碰撞情形，因此有了連接埠(port)的產生。埠就像是一個一個的通道，可以讓一台電腦同時擁有好幾個對外連接的出口，這也使得網路傳輸有了多工的能力。

　　而此層中有兩個重要的協定，TCP和UDP協定。這兩個協定負責的工作為傳輸流程控制、錯誤檢查及確認等。其中TCP協定是一個較複雜的協定，它是屬於連結導向的傳輸協定，也就是當傳輸資料被分成好幾個封包傳送時，當目的端電腦接收到每一個封包，就會傳回一個確認值，也因此，TCP協定在對資料的掌控上及偵錯方面，就遠勝於UDP，但速度則不如UDP。UDP則是非連結傳輸協定，他只負則送出及接收，而不會收到一個封包就回傳一個確認的訊息，其檢查則是靠著總和檢測值來判定。

7.應用層

　　此層為TCP/IP中的最頂層，應用層中的應用軟體，並沒有一定的工作類別。有的只是偵測網路資訊的簡單工具，有的提供一些網路的服務，如FTP、DNS服務等等。
  UDP通訊協定
  Internet 網路除了提供可靠性服務的 TCP 連接外，也提供非連接方式傳輸稱之為『使用者電報傳輸協定』（User Datagram Protocol, UDP）。UDP 傳輸協定比 TCP簡單，沒有連線要求、連線終止、以及流量控制的管理程序。它的優點是傳輸速率較快，主要應用於較少量、即時性傳輸，而對資料正確性的要求較不高（如語音或視訊）的環境下使用。而其缺點則是無法提供正確性較高的資料傳輸。採用 UDP 傳輸可能會有資料重覆、資料未依序到達、資料遺失等等問題，必須由使用者自行解決。但從一方面來思考，Internet 網路上有許多應用系統，它們之間的傳輸量很低，而且需要即時反映訊息，如果採用 TCP 連線反而會浪費許多連結時間，而影響傳輸效率，在這種情況之下使用 UDP 的效率相對應較高，譬如 DNS 伺服系統或 SNMP 協定。因此，可以做一個簡單的結論，再傳輸量比較少或需要及時反映的環境下，使用 UDP 協定傳輸會優於 TCP 協定。但在許多情況下，使用者很難去決定到底應該使用何種協定來傳輸目前的資料，因此，在許多系統在同一傳輸埠口上，提供有 TCP 和 UDP 兩種協定讓使用使者連接，如果使用者的資料不需要分割，也就是說，一個 UDP 封包可以承載的話，那就使用 UDP 協定傳輸，如果需要多筆封包傳輸，則使用 TCP 協定傳輸。

至於一個傳輸層封包可以承載多少訊息，如果以圖 7-2 IP 封包格式計算，一個 IP 封包最大的長度為 65536 Bytes，扣除 IP 封包標頭長度（20 Bytes），再扣除 UDP 封包標頭長度（20 Bytes），則 UDP 所能承載的資料長度為 65496 Bytes，但這是很難達成的網路傳輸環境。一般我們為了 IP 封包在傳輸中避免有再被分段的情形，網路通訊之前都會協議出『最大傳輸單位』（Maximum Transmission Unit, MTU），如果以連結的子網路都是 Ethernet 網路為例 MTU = 1518 Bytes，而 IP 封包最大為 1500 Bytes，則 UDP 封包最大為 1480 Bytes，也表示所傳輸的資料少於 1460 Bytes，則可使用 UDP 協定傳輸，否則必需用 TCP 協定傳輸。也可說是，到底傳輸量少於多少位元組可以用 UDP 協定傳輸，這必需看使用者連結網路的環境，並沒有一個固定的標準。

UDP 封包與 IP 封包之包裝方式如圖 7-2 所示，圖 7-20 為 UDP 封包格式，因其為非連接方式，所以沒有順序號碼、確認號碼和其它控制欄位，而各欄位功能如下：

● 來源埠口（Source Port）：發送端之傳輸埠口。

● 目的埠口（Destination Port）：接收端之傳輸埠口。

● 長度（Length）：該封包所承載資料（Data）的長度。

● 檢查集（Checksum）：該封包之錯誤檢查的檢查集。

UDP

用戶資料報協定（英語：User Datagram Protocol，縮寫：UDP；又稱用戶資料包協定）是一個簡單的面向資料報的通信協定，位於OSI模型的傳輸層。該協定由David P. Reed在1980年設計且在RFC 768中被規範。典型網路上的眾多使用UDP協定的關鍵應用在一定程度上是相似的。

在TCP/IP模型中，UDP為網路層以上和應用層以下提供了一個簡單的介面。UDP只提供資料的不可靠傳遞，它一旦把應用程式發給網路層的資料傳送出去，就不保留資料備份（所以UDP有時候也被認為是不可靠的資料報協定）。UDP在IP資料報的頭部僅僅加入了復用和資料校驗欄位。

UDP適用於不需要或在程式中執行錯誤檢查和糾正的應用，它避免了協定棧中此類處理的開銷。對時間有較高要求的應用程式通常使用UDP，因為丟棄封包比等待或重傳導致延遲更可取。

可靠性
由於UDP缺乏可靠性且屬於無連接協定，所以應用程式通常必須容許一些遺失、錯誤或重複的封包。某些應用程式（如TFTP）可能會根據需要在應用程式層中添加基本的可靠性機制。[1]

一些應用程式不太需要可靠性機制，甚至可能因為引入可靠性機制而降低效能，所以它們使用UDP這種缺乏可靠性的協定。串流媒體，即時多人遊戲和IP語音（VoIP）是經常使用UDP的應用程式。 在這些特定應用中，丟包通常不是重大問題。如果應用程式需要高度可靠性，則可以使用諸如TCP之類的協定。

例如，在VoIP中延遲和抖動是主要問題。如果使用TCP，那麼任何封包遺失或錯誤都將導致抖動，因為TCP在請求及重傳遺失資料時不向應用程式提供後續資料。如果使用UDP，那麼應用程式則需要提供必要的握手，例如即時確認已收到的訊息。

由於UDP缺乏擁塞控制，所以需要基於網路的機制來減少因失控和高速UDP流量負荷而導致的擁塞崩潰效應。換句話說，因為UDP傳送端無法檢測擁塞，所以像使用包佇列和丟棄技術的路由器之類的網路基礎裝置會被用於降低UDP過大流量。資料擁塞控制協定（DCCP）設計成通過在諸如串流媒體類型的高速率UDP流中增加主機擁塞控制，來減小這個潛在的問題。

應用
許多關鍵的網際網路應用程式使用UDP[2]，包括：

域名系統（DNS），其中查詢階段必須快速，並且只包含單個請求，後跟單個回覆封包；
動態主機組態協定（DHCP），用於動態分配IP位址；
簡單網路管理協定（SNMP）；
路由資訊協定（RIP）；
網路時間協定（NTP）。
串流媒體、線上遊戲流量通常使用UDP傳輸。 即時影片流和音訊流應用程式旨在處理偶爾遺失、錯誤的封包，因此只會發生品質輕微下降，而避免了重傳封包帶來的高延遲。 由於TCP和UDP都在同一網路上執行，因此一些企業發現來自這些即時應用程式的UDP流量影響了使用TCP的應用程式的效能，例如銷售、會計和資料庫系統。 當TCP檢測到封包遺失時，它將限制其資料速率使用率。由於即時和業務應用程式對企業都很重要，因此一些人認為開發服務品質解決方案至關重要。[3]

某些VPN應用（如OpenVPN）使用UDP並可以在應用程式級別實現可靠連接和錯誤檢查。
